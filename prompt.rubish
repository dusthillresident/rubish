set £.p array 256;
foreach i (make-array "()" "[]") (
 set £.p[byte-get i 0] 1;
 set £.p[byte-get i 1] -1;
)

foreach i (make-array "local" "while" "print" "stdin" "stdout" "set" "quit" "=" "&&" "cat$" "chr$" "error-message" "catch" "+" "!" "<" "eval" "get-byte" "if" "return" "file-eof?") (
 eval cat$ "set £." i " @" i;
)

func £.get()(
 £.local c s("") l(0) r(1) q(0);
 £.while r(
  £.set c £.get-byte £.stdin;
  £.if £.< c 0 (£.print; £.return "")
  £.if £.= c 34 (£.set q £.! q)
  £.if £.! q (
   £.if (&& £.= c 10 £.< l 1) (£.set r 0)
   £.set l £.+ l £.p[c]
  )
  £.set s £.cat$ s £.chr$ c;
 )
 s
)

£.while 1 (
 (£.print £.stdout "> ")
 £.if (£.catch (£.eval £.get) £.retVal) (
  £.print £.stdout £.error-message;
 )(
  £.if(£.file-eof? £.stdin)(£.return 0)
  £.print £.stdout @£.retVal;
  £.set _ @£.retVal;
 )
)
;